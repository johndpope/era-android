apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.rapidsos.era"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 10
        versionName "1.0.14"

        testInstrumentationRunner "com.rapidsos.era.EraTestRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField "String", "ERA_CLIENT_ID", "\"${getEraClientID()}\""
            buildConfigField "String", "ERA_CLIENT_SECRET", "\"${getEraClientSecret()}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ERA_CLIENT_ID", "\"${getEraClientID()}\""
            buildConfigField "String", "ERA_CLIENT_SECRET", "\"${getEraClientSecret()}\""
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        pickFirst 'protobuf.meta'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/protobuf.meta'
    }
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:appcompat-v7:$support_version"
        force "com.android.support:design:$support_version"
        force "com.android.support:cardview-v7:$support_version"
        force "com.android.support:gridlayout-v7:$support_version"
        force "com.android.support:recyclerview-v7:$support_version"
        force "com.android.support:support-v4:$support_version"
        force "com.google.android.gms:play-services-base:$play_services_version"
        force "com.google.android.gms:play-services-analytics:$play_services_version"
        force "com.google.android.gms:play-services-gcm:$play_services_version"
        force "com.google.android.gms:play-services-location:$play_services_version"
        force "com.google.android.gms:play-services-maps:$play_services_version"
        force "com.google.android.gms:play-services-places:$play_services_version"
        force "com.google.android.gms:play-services-nearby:$play_services_version"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":utils")
    implementation project(":database")
    implementation project(":midas")
    implementation project(":shared")
    implementation project(":bluetooth")
    wearApp project(':wear')

    implementation ("com.rapidsos:emergency-data-sdk:$emgDataSdk") {
        changing = true
    }

    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:gridlayout-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.google.android.gms:play-services-wearable:$play_services_version"
    implementation "com.google.android.gms:play-services-location:$play_services_version"

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    implementation 'com.android.support:multidex:1.0.2'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.hannesdorfmann.mosby3:mvp:3.0.4'

    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation 'de.hdodenhof:circleimageview:2.2.0'

    implementation 'com.mlsdev.rximagepicker:library:2.0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

    implementation 'br.com.simplepass:loading-button-android:1.8.4'

    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    implementation("com.rapidsos:android-utils:0.0.11-SNAPSHOT") {
        changing = true
    }

    implementation 'pl.charmas.android:android-reactive-location2:2.0@aar'

    implementation 'com.google.dagger:dagger:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'

    androidTestImplementation 'com.google.dagger:dagger:2.11'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.11'

    testImplementation 'com.google.dagger:dagger:2.11'
    kaptTest 'com.google.dagger:dagger-compiler:2.11'

    testImplementation 'junit:junit:4.12'

    implementation 'org.mockito:mockito-core:2.8.9'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    androidTestImplementation 'org.mockito:mockito-android:2.8.9'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'

    // Espresso dependencies
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso.idling:idling-concurrent:3.0.1'

    androidTestImplementation 'com.github.andrzejchm.RESTMock:android:0.2.2'

    testImplementation 'org.assertj:assertj-core:3.8.0'
}

repositories {
    mavenCentral()
}

afterEvaluate {
    jacocoTestDebugUnitTestReport.dependsOn(copyTestClasses)
    jacocoTestReport.dependsOn(copyTestClasses)
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// Get the era client id from the local gradle properties (~/.gradle/gradle.properties)
def getEraClientID() {
    return hasProperty('ERA_CLIENT_ID') ? ERA_CLIENT_ID : ""
}

// Get the era client secret from the local gradle properties (~/.gradle/gradle.properties)
def getEraClientSecret() {
    return hasProperty('ERA_CLIENT_SECRET') ? ERA_CLIENT_SECRET : ""
}

apply plugin: 'com.google.gms.google-services'